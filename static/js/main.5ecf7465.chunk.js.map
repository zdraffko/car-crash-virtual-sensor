{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.module.css","components/CarCrashForm/SelectSection/SelectSection.module.css","components/CarCrashForm/InputSection/InputSection.module.css","components/Navigation/NavItems/NavItem/NavItem.module.css","components/UI/Button/Button.module.css","components/CarCrashForm/CarCrashForm.module.css","components/CarCrashResults/CarCrashResults.module.css","components/Navigation/BurgerMenu/BurgerMenu.module.css","components/Navigation/NavItems/NavItems.module.css","components/Navigation/NavBar/NavBar.module.css","components/CarCrashForm/FieldLabel/FieldLabel.js","components/CarCrashForm/SelectSection/SelectSection.js","components/CarCrashForm/InputSection/InputSection.js","components/UI/Button/Button.js","components/CarCrashForm/CarCrashForm.js","util/CalculateResults/calculateStoppingDistance.js","util/CalculateResults/calculateCarCrashSpeed.js","util/CalculateResults/calculateDeceleration.js","util/CalculateResults/calculateDeathProbability.js","components/CarCrashResults/CarCrashResults.js","components/Navigation/BurgerMenu/BurgerMenu.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/NavBar/NavBar.js","hooks/useFormValidation.js","util/countDecimals/countDecimals.js","util/ValidateForm/validateForm.js","App.js","index.js"],"names":["module","exports","React","memo","validationErrors","labelContent","styles","className","inputLabel","errorLabel","errorContent","selectSectionName","selectSectionValue","handleOnChange","handleOnBlur","isRequired","selectSectionOptions","selectSection","name","value","onChange","onBlur","required","disabled","Object","keys","map","key","inputSectionName","inputSectionType","inputSectionValue","inputSectionMinValue","inputSectionStep","inputSection","type","min","step","Button","buttonType","onClick","isSubmitting","children","CarCrashForm","formValues","handleValueChange","handleBlur","handleFormSubmit","history","Form","onSubmit","event","hasSeatbelt","driverWeight","reactionTime","обикновен","нетрезвен","carSpeed","roadConditions","distanceToObstacle","roadGradient","calculateStoppingDistance","speedInMeters","reactionDistance","console","log","brakingDistance","Math","abs","calculateCarCrashSpeed","rateOfDeceleration","d","sqrt","calculateDeceleration","carCrashSpeed","seatbelt","calculateDeathProbability","deceleration","CarCrashResults","resetForm","stoppingDistance","useRef","deathProbability","hasCrashed","useEffect","current","Number","Results","toFixed","push","BurgerMenu","toggleSideDrawer","role","NavItem","link","to","activeClassName","activeNavItem","NavItems","SideDrawer","isOpen","Opened","Closed","NavBar","useFormValidation","initialFormState","validateForm","useState","setFormValues","setValidationErrors","setIsSubmitting","length","useCallback","target","errors","errorMessage","error","preventDefault","handleFormReset","countDecimals","number","floor","toString","split","App","formValidationObject","isSideDrawerOpen","setIsSideDrawerOpen","prevState","path","render","routProps","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5ecf7465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Opened\":\"SideDrawer_Opened__1LLoi\",\"Closed\":\"SideDrawer_Closed__wRM5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectSection\":\"SelectSection_selectSection__1boLr\",\"inputLabel\":\"SelectSection_inputLabel__3Vb3D\",\"labelContent\":\"SelectSection_labelContent__YwOm_\",\"errorContent\":\"SelectSection_errorContent__10MwX\",\"errorLabel\":\"SelectSection_errorLabel__1iZXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSection\":\"InputSection_inputSection__2Yio8\",\"inputLabel\":\"InputSection_inputLabel__2KJHT\",\"labelContent\":\"InputSection_labelContent__tmXLi\",\"errorContent\":\"InputSection_errorContent__1aLcB\",\"errorLabel\":\"InputSection_errorLabel__292tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__1AitK\",\"activeNavItem\":\"NavItem_activeNavItem__THJUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CarCrashForm_Form__3pGI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"CarCrashResults_Results__3VLnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerMenu\":\"BurgerMenu_BurgerMenu__3AuL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__2YStF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__50_dp\"};","import React from \"react\";\n\nconst FieldLabel = ({ validationErrors, labelContent, styles }) => (\n  <label className={validationErrors ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n    <span className={validationErrors ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n      {validationErrors || labelContent}\n    </span>\n  </label>\n);\n\nexport default React.memo(FieldLabel);\n","import React from \"react\";\n\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\n\nimport styles from \"./SelectSection.module.css\";\n\nconst SelectSection = ({\n  selectSectionName,\n  selectSectionValue,\n  handleOnChange,\n  handleOnBlur,\n  isRequired,\n  validationErrors,\n  selectSectionOptions,\n  labelContent\n}) => (\n  <div className={styles.selectSection}>\n    <select\n      name={selectSectionName}\n      value={selectSectionValue}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n      required={isRequired}\n    >\n      <option value=\"\" disabled>{}</option>\n      {\n        Object.keys(selectSectionOptions)\n          .map((key) => <option value={selectSectionOptions[key]} key={key}>{key}</option>)\n      }\n    </select>\n    <FieldLabel\n      validationErrors={validationErrors}\n      labelContent={labelContent}\n      styles={styles}\n    />\n  </div>\n);\n\nexport default React.memo(SelectSection);\n","import React from \"react\";\n\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\n\nimport styles from \"./InputSection.module.css\";\n\nconst InputSection = ({\n  inputSectionName,\n  inputSectionType,\n  inputSectionValue,\n  handleOnChange,\n  handleOnBlur,\n  inputSectionMinValue,\n  inputSectionStep,\n  isRequired,\n  validationErrors,\n  labelContent\n}) => (\n  <div className={styles.inputSection}>\n    <input\n      name={inputSectionName}\n      type={inputSectionType}\n      value={inputSectionValue}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n      min={inputSectionMinValue}\n      required={isRequired}\n      step={inputSectionStep}\n    />\n    <FieldLabel\n      validationErrors={validationErrors}\n      labelContent={labelContent}\n      styles={styles}\n    />\n  </div>\n);\n\nexport default React.memo(InputSection);\n","import React from \"react\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ buttonType, onClick, isSubmitting, children }) => (\n  <button\n    type={buttonType}\n    className={styles.Button}\n    onClick={onClick}\n    disabled={isSubmitting}\n  >{children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport SelectSection from \"./SelectSection/SelectSection\";\nimport InputSection from \"./InputSection/InputSection\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashForm.module.css\";\n\nconst CarCrashForm = ({\n  formValues,\n  validationErrors,\n  isSubmitting,\n  handleValueChange,\n  handleBlur,\n  handleFormSubmit,\n  history\n}) => (\n  <>\n    <h1>Виртуален Сензор</h1>\n    <form className={styles.Form} onSubmit={(event) => handleFormSubmit(event, history)}>\n      <SelectSection\n        selectSectionName=\"hasSeatbelt\"\n        selectSectionValue={formValues.hasSeatbelt}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.hasSeatbelt}\n        selectSectionOptions={{ \"С колан\": 0.2, \"Без колан\": 0.04 }}\n        labelContent=\"Имаш ли колан?\"\n      />\n\n      <InputSection\n        inputSectionName=\"driverWeight\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.driverWeight}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.driverWeight}\n        labelContent=\"Какво е теглото ти (в кг)?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"reactionTime\"\n        selectSectionValue={formValues.reactionTime}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.reactionTime}\n        selectSectionOptions={{\n          \"много внимателен\": 1,\n          обикновен: 1.5,\n          \"изморен / възрастен\": 2,\n          нетрезвен: 2.5\n        }}\n        labelContent=\"Какъв вид шофьор си?\"\n      />\n\n      <InputSection\n        inputSectionName=\"carSpeed\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.carSpeed}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.carSpeed}\n        labelContent=\"Каква е скоростта на колата (в км/ч)?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"roadConditions\"\n        selectSectionValue={formValues.roadConditions}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.roadConditions}\n        selectSectionOptions={{\n          \"сух асфалт\": 0.92,\n          \"мокър асфалт\": 0.7,\n          \"заснежен асфалт\": 0.2,\n          \"заледен асфалт\": 0.1\n        }}\n        labelContent=\"Каква е пътната обстановка?\"\n      />\n\n      <InputSection\n        inputSectionName=\"distanceToObstacle\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.distanceToObstacle}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.distanceToObstacle}\n        labelContent=\"Колко метра има до сблъсъка?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"roadGradient\"\n        selectSectionValue={formValues.roadGradient}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.roadGradient}\n        selectSectionOptions={{\n          \"без наклон\": 0,\n          \"лек наклон нагоре\": 0.1,\n          \"стръмен наклон нагоре\": 0.3,\n          \"лек наклон надолу\": -0.1,\n          \"стръмен наклон надолу\": -0.3\n        }}\n        labelContent=\"Какъв е наклона на пътя?\"\n      />\n\n      <Button buttonType=\"submit\" isSubmitting={isSubmitting}>Изчисли</Button>\n    </form>\n  </>\n);\n\nexport default CarCrashForm;\n","const calculateStoppingDistance = (carSpeed, reactionTime, roadGradient, roadConditions) => {\n  const speedInMeters = carSpeed / 3.6;\n  const reactionDistance = speedInMeters * reactionTime;\n  console.log(`reaction distance ${reactionDistance}`);\n  const brakingDistance = Math.abs((speedInMeters ** 2) / ((2 * 9.8) * (roadConditions + roadGradient)));\n  console.log(`breaking distance ${brakingDistance}`);\n  return reactionDistance + brakingDistance;\n};\n\nexport default calculateStoppingDistance;\n","const calculateCarCrashSpeed = (carSpeed, reactionTime, distanceToObstacle, roadConditions, roadGradient) => {\n  const speedInMeters = carSpeed / 3.6;\n  const rateOfDeceleration = (roadConditions + roadGradient) * 9.8;\n  const reactionDistance = speedInMeters * reactionTime;\n\n  if (distanceToObstacle - reactionDistance > 0) {\n    const d = distanceToObstacle - reactionDistance;\n    return Math.sqrt(Math.abs((speedInMeters ** 2) - 2 * rateOfDeceleration * d));\n  }\n\n  return speedInMeters;\n};\n\nexport default calculateCarCrashSpeed;\n","const calculateDeceleration = (driverWeight, carCrashSpeed, seatbelt) => {\n  const impactForce = (driverWeight * (carCrashSpeed ** 2)) / (2 * seatbelt);\n  const stoppingTime = (carCrashSpeed * driverWeight) / impactForce;\n  return (carCrashSpeed / stoppingTime) * 0.101972;\n};\n\nexport default calculateDeceleration;\n","const calculateDeathProbability = (deceleration) => {\n  switch (true) {\n    case deceleration < 10 && deceleration >= 0:\n      return 0;\n    case deceleration < 15:\n      return 5;\n    case deceleration < 20:\n      return 10;\n    case deceleration < 25:\n      return 35;\n    case deceleration < 30:\n      return 42;\n    case deceleration < 35:\n      return 62;\n    case deceleration < 40:\n      return 80;\n    case deceleration < 45:\n      return 87;\n    case deceleration < 50:\n      return 95;\n    case deceleration < 55:\n      return 98;\n    case deceleration >= 55:\n      return 100;\n    default:\n      return 0;\n  }\n};\n\nexport default calculateDeathProbability;\n","import React, { useEffect, useRef } from \"react\";\n\nimport calculateStoppingDistance from \"../../util/CalculateResults/calculateStoppingDistance\";\nimport calculateCarCrashSpeed from \"../../util/CalculateResults/calculateCarCrashSpeed\";\nimport calculateDeceleration from \"../../util/CalculateResults/calculateDeceleration\";\nimport calculateDeathProbability from \"../../util/CalculateResults/calculateDeathProbability\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashResults.module.css\";\n\nconst CarCrashResults = ({\n  carSpeed,\n  reactionTime,\n  roadGradient,\n  roadConditions,\n  distanceToObstacle,\n  driverWeight,\n  hasSeatbelt,\n  resetForm,\n  history\n}) => {\n  const stoppingDistance = useRef(null);\n  const carCrashSpeed = useRef(0);\n  const deathProbability = useRef(0);\n  const hasCrashed = useRef(false);\n\n  useEffect(() => {\n    stoppingDistance.current = Math.abs(calculateStoppingDistance(\n      Number(carSpeed),\n      Number(reactionTime),\n      Number(roadGradient),\n      Number(roadConditions)\n    ));\n    console.log(`stopping distance ${stoppingDistance.current}`);\n    if (stoppingDistance.current > distanceToObstacle) {\n      hasCrashed.current = true;\n      carCrashSpeed.current = calculateCarCrashSpeed(\n        Number(carSpeed),\n        Number(reactionTime),\n        Number(distanceToObstacle),\n        Number(roadConditions),\n        Number(roadGradient)\n      );\n      console.log(`car crash speed ${carCrashSpeed.current}`);\n      const deceleration = calculateDeceleration(Number(driverWeight), carCrashSpeed.current, Number(hasSeatbelt));\n      console.log(`deceleration ${deceleration}`);\n      deathProbability.current = calculateDeathProbability(deceleration);\n      console.log(`death probability ${deathProbability.current}`);\n    }\n  }, [carSpeed, distanceToObstacle, driverWeight, hasSeatbelt, reactionTime, roadConditions, roadGradient]);\n\n  return (\n    <>\n      <h1>Резултати</h1>\n      <div className={styles.Results}>\n        {\n          hasCrashed.current\n            ? (\n              <>\n                <h3>Ще има катастрофа</h3>\n                <p>Колата няма да успее да спре успешно преди мястото на сблъсък.</p>\n                <p>Скоростта на колата при сблъсъка ще е {carCrashSpeed.current.toFixed(2)} метра в секунда ({\n                (carCrashSpeed.current * 3.6).toFixed(2)\n} километра в час).\n                </p>\n                <p>Вероятността за смърт е {deathProbability.current} %.</p>\n              </>\n            )\n            : (\n              <>\n                <h3>Няма да има катастрофа !</h3>\n                <p>Колата ще успее да спре успешно на {\n                  stoppingDistance.current\n                    ? (Number(distanceToObstacle) - stoppingDistance.current).toFixed(2) : 0\n} метра от мястото на сблъсък.\n                </p>\n              </>\n            )\n        }\n      </div>\n      <Button\n        buttonType=\"button\"\n        onClick={() => {\n          resetForm();\n          history.push(\"/car-crash-virtual-sensor\");\n        }}\n      >Ново изчисление\n      </Button>\n      <Button\n        buttonType=\"button\"\n        onClick={() => {\n          history.push(\"/car-crash-virtual-sensor\");\n        }}\n      >Промени изчислението\n      </Button>\n    </>\n  );\n};\n\nexport default CarCrashResults;\n","import React from \"react\";\n\nimport styles from \"./BurgerMenu.module.css\";\n\nconst BurgerMenu = ({ toggleSideDrawer }) => (\n  <div\n    role=\"presentation\"\n    className={styles.BurgerMenu}\n    onClick={toggleSideDrawer}\n  >\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default BurgerMenu;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./NavItem.module.css\";\n\nconst NavItem = ({ link, children }) => (\n  <li className={styles.NavItem}>\n    <NavLink to={link} activeClassName={styles.activeNavItem}>{children}</NavLink>\n  </li>\n);\n\nexport default NavItem;\n","import React from \"react\";\n\nimport NavItem from \"./NavItem/NavItem\";\n\nimport styles from \"./NavItems.module.css\";\n\nconst NavItems = () => (\n  <ul className={styles.NavItems}>\n    <NavItem link=\"/car-crash-home\">Начало</NavItem>\n    <NavItem link=\"/car-crash-virtual-sensor\">Виртуален Сензор</NavItem>\n    <NavItem link=\"car-crash-documentation\">Документация</NavItem>\n  </ul>\n);\n\nexport default NavItems;\n","import React from \"react\";\n\nimport NavItems from \"../NavItems/NavItems\";\n\nimport styles from \"./SideDrawer.module.css\";\n\nconst SideDrawer = ({ isOpen }) => (\n  <div className={`${styles.SideDrawer} ${isOpen ? styles.Opened : styles.Closed}`}>\n    <nav>\n      <NavItems />\n    </nav>\n  </div>\n);\n\nexport default SideDrawer;\n","import React from \"react\";\n\nimport NavItems from \"../NavItems/NavItems\";\n\nimport styles from \"./NavBar.module.css\";\n\nconst NavBar = () => (\n  <nav className={styles.NavBar}>\n    <NavItems />\n  </nav>\n);\n\nexport default NavBar;\n","import { useState, useEffect, useCallback } from \"react\";\n\nconst useFormValidation = (initialFormState, validateForm) => {\n  const [formValues, setFormValues] = useState(initialFormState);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(validationErrors).length === 0) {\n        setIsSubmitting(false);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [validationErrors, isSubmitting, formValues]);\n\n  const handleValueChange = useCallback((event) => setFormValues({\n    ...formValues,\n    [event.target.name]: event.target.value\n  }), [formValues]);\n\n  const handleBlur = useCallback((event) => {\n    const errors = validateForm(formValues);\n    let errorMessage = \"\";\n    for (const error of Object.keys(errors)) {\n      if (event.target.name === error) {\n        errorMessage = errors[error];\n      }\n    }\n\n    setValidationErrors({ ...validationErrors, [event.target.name]: errorMessage });\n  }, [formValues, validateForm, validationErrors]);\n\n  const handleFormSubmit = useCallback((event, history) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setValidationErrors(validateForm(formValues));\n    history.push(\"/car-crash-results\");\n  }, [formValues, validateForm]);\n\n  const handleFormReset = useCallback(() => {\n    setFormValues(initialFormState);\n  }, [initialFormState]);\n\n  return {\n    formValues,\n    validationErrors,\n    isSubmitting,\n    handleValueChange,\n    handleBlur,\n    handleFormSubmit,\n    handleFormReset\n  };\n};\n\nexport default useFormValidation;\n","const countDecimals = (number) => {\n  if (Math.floor(number) !== number) {\n    return number.toString().split(\".\")[1].length || 0;\n  }\n  return 0;\n};\n\nexport default countDecimals;\n","import countDecimals from \"../countDecimals/countDecimals\";\n\nconst validateForm = (formValues) => {\n  const errors = {};\n\n  if (!formValues.driverWeight) {\n    errors.driverWeight = \"Моля въведи килограми !\";\n  } else if (Number(formValues.driverWeight) < 0) {\n    errors.driverWeight = \"Моля въведи положителни килограми !\";\n  } else if (Number(formValues.driverWeight) === 0) {\n    errors.driverWeight = \"Моля въведи повече от 0 килограма !\";\n  } else if (countDecimals(Number(formValues.driverWeight)) > 2) {\n    errors.driverWeight = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.carSpeed) {\n    errors.carSpeed = \"Моля въведи скорост !\";\n  } else if (Number(formValues.carSpeed) < 0) {\n    errors.carSpeed = \"Моля въведи положителна скорост !\";\n  } else if (Number(formValues.carSpeed) === 0) {\n    errors.carSpeed = \"Моля въведи скорост по-голяма от 0 !\";\n  } else if (countDecimals(Number(formValues.carSpeed)) > 2) {\n    errors.carSpeed = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.distanceToObstacle) {\n    errors.distanceToObstacle = \"Моля въведи разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) < 0) {\n    errors.distanceToObstacle = \"Моля въведи положителн разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) === 0) {\n    errors.distanceToObstacle = \"Моля въведи разстояние по-голямо от 0 !\";\n  } else if (countDecimals(Number(formValues.distanceToObstacle)) > 2) {\n    errors.distanceToObstacle = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.hasSeatbelt) {\n    errors.hasSeatbelt = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.reactionTime) {\n    errors.reactionTime = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadConditions) {\n    errors.roadConditions = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadGradient) {\n    errors.roadGradient = \"Моля избери една от опциите !\";\n  }\n\n  return errors;\n};\n\nexport default validateForm;\n","import React, { useState } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport CarCrashForm from \"./components/CarCrashForm/CarCrashForm\";\nimport CarCrashResults from \"./components/CarCrashResults/CarCrashResults\";\nimport BurgerMenu from \"./components/Navigation/BurgerMenu/BurgerMenu\";\nimport SideDrawer from \"./components/Navigation/SideDrawer/SideDrawer\";\nimport NavBar from \"./components/Navigation/NavBar/NavBar\";\n\nimport useFormValidation from \"./hooks/useFormValidation\";\nimport validateForm from \"./util/ValidateForm/validateForm\";\nimport \"./App.css\";\n\nconst initialFormState = {\n  hasSeatbelt: \"\",\n  driverWeight: \"\",\n  reactionTime: \"\",\n  carSpeed: \"\",\n  roadConditions: \"\",\n  roadGradient: \"\",\n  distanceToObstacle: \"\",\n};\n\nconst App = () => {\n  const formValidationObject = useFormValidation(initialFormState, validateForm);\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n  return (\n    <div className=\"App\">\n      <BurgerMenu toggleSideDrawer={() => setIsSideDrawerOpen((prevState) => !prevState)} />\n      <SideDrawer isOpen={isSideDrawerOpen} />\n      <NavBar />\n      <div className=\"VirtualSensor\">\n        <Switch>\n          <Route\n            path=\"/car-crash-virtual-sensor\"\n            render={(routProps) => <CarCrashForm {...formValidationObject} {...routProps} />}\n          />\n          <Route\n            path=\"/car-crash-results\"\n            render={(routProps) => (\n              <CarCrashResults\n                {...formValidationObject.formValues}\n                {...routProps}\n                resetForm={formValidationObject.handleFormReset}\n              />\n            )}\n          />\n          <Redirect exact path=\"/\" to=\"/car-crash-virtual-sensor\" />\n          <Route render={() => <h1>404</h1>} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}