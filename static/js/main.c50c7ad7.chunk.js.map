{"version":3,"sources":["components/Navigation/BurgerMenu/BurgerMenu.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/CarCrashForm/SelectSection/SelectSection.module.css","components/CarCrashForm/InputSection/InputSection.module.css","components/Navigation/NavItems/NavItem/NavItem.module.css","components/UI/Button/Button.module.css","components/CarCrashHome/CarCrashHome.module.css","components/CarCrashForm/CarCrashForm.module.css","components/CarCrashResults/CarCrashResults.module.css","components/CarCrashDocumentation/CarCrashDocumentation.module.css","components/Navigation/NavItems/NavItems.module.css","components/Navigation/NavBar/NavBar.module.css","components/UI/Button/Button.js","components/CarCrashHome/CarCrashHome.js","components/CarCrashForm/FieldLabel/FieldLabel.js","components/CarCrashForm/SelectSection/SelectSection.js","components/CarCrashForm/InputSection/InputSection.js","components/CarCrashForm/CarCrashForm.js","util/CalculateResults/calculateStoppingDistance.js","util/CalculateResults/calculateCarCrashSpeed.js","util/CalculateResults/calculateDeceleration.js","util/CalculateResults/calculateDeathProbability.js","components/CarCrashResults/CarCrashResults.js","components/CarCrashDocumentation/CarCrashDocumentation.js","components/Navigation/BurgerMenu/BurgerMenu.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/NavBar/NavBar.js","hooks/useFormValidation.js","util/countDecimals/countDecimals.js","util/ValidateForm/validateForm.js","App.js","index.js"],"names":["module","exports","Button","buttonType","onClick","isSubmitting","children","type","className","styles","disabled","CarCrashHome","history","Home","push","React","memo","validationErrors","labelContent","inputLabel","errorLabel","errorContent","selectSectionName","selectSectionValue","handleOnChange","handleOnBlur","isRequired","selectSectionOptions","selectSection","name","value","onChange","onBlur","required","Object","keys","map","key","inputSectionName","inputSectionType","inputSectionValue","inputSectionMinValue","inputSectionStep","inputSection","min","step","CarCrashForm","formValues","handleValueChange","handleBlur","handleFormSubmit","Form","onSubmit","event","hasSeatbelt","driverWeight","reactionTime","обикновен","нетрезвен","carSpeed","roadConditions","distanceToObstacle","roadGradient","calculateStoppingDistance","speedInMeters","reactionDistance","console","log","brakingDistance","Math","abs","calculateCarCrashSpeed","rateOfDeceleration","d","sqrt","calculateDeceleration","carCrashSpeed","seatbelt","calculateDeathProbability","deceleration","CarCrashResults","resetForm","stoppingDistance","useRef","deathProbability","hasCrashed","useEffect","current","Number","Results","toFixed","CarCrashDocumentation","Documentation","BurgerMenu","toggleSideDrawer","isOpen","role","toggle","id","lineOne","lineTwo","lineThree","link","NavItem","to","activeClassName","activeNavItem","NavItems","closeSideDrawer","SideDrawer","Opened","Closed","NavBar","useFormValidation","initialFormState","validateForm","useState","setFormValues","setValidationErrors","setIsSubmitting","length","useCallback","target","errors","errorMessage","error","preventDefault","handleFormReset","countDecimals","number","floor","toString","split","App","formValidationObject","isSideDrawerOpen","setIsSideDrawerOpen","prevState","path","component","render","routProps","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c50c7ad7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerMenu\":\"BurgerMenu_BurgerMenu__3AuL7\",\"lineOne\":\"BurgerMenu_lineOne__h24-r\",\"lineTwo\":\"BurgerMenu_lineTwo__3Qp5M\",\"lineThree\":\"BurgerMenu_lineThree__ZRU3s\",\"toggle\":\"BurgerMenu_toggle__2zRbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Opened\":\"SideDrawer_Opened__1LLoi\",\"Closed\":\"SideDrawer_Closed__wRM5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectSection\":\"SelectSection_selectSection__1boLr\",\"inputLabel\":\"SelectSection_inputLabel__3Vb3D\",\"labelContent\":\"SelectSection_labelContent__YwOm_\",\"errorContent\":\"SelectSection_errorContent__10MwX\",\"errorLabel\":\"SelectSection_errorLabel__1iZXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSection\":\"InputSection_inputSection__2Yio8\",\"inputLabel\":\"InputSection_inputLabel__2KJHT\",\"labelContent\":\"InputSection_labelContent__tmXLi\",\"errorContent\":\"InputSection_errorContent__1aLcB\",\"errorLabel\":\"InputSection_errorLabel__292tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__1AitK\",\"activeNavItem\":\"NavItem_activeNavItem__THJUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"CarCrashHome_Home__19xwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CarCrashForm_Form__3pGI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"CarCrashResults_Results__3VLnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Documentation\":\"CarCrashDocumentation_Documentation__1mF9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__2YStF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__50_dp\"};","import React from \"react\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ buttonType, onClick, isSubmitting, children }) => (\n  <button\n    type={buttonType}\n    className={styles.Button}\n    onClick={onClick}\n    disabled={isSubmitting}\n  >{children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashHome.module.css\";\n\nconst CarCrashHome = ({ history }) => (\n  <>\n    <h1>Начало</h1>\n    <div className={styles.Home}>\n      <p>Виртуален сензор за изчисляване вероятността за смъртност\nпри катастрофа, ако има такава.\n      </p>\n    </div>\n    <Button buttonType=\"button\" onClick={() => history.push(\"/car-crash-virtual-sensor\")}>Към виртуалния сензор</Button>\n    <Button buttonType=\"button\" onClick={() => history.push(\"/car-crash-documentation\")}>Към документацията</Button>\n  </>\n);\n\nexport default CarCrashHome;\n","import React from \"react\";\n\nconst FieldLabel = ({ validationErrors, labelContent, styles }) => (\n  <label className={validationErrors ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n    <span className={validationErrors ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n      {validationErrors || labelContent}\n    </span>\n  </label>\n);\n\nexport default React.memo(FieldLabel);\n","import React from \"react\";\n\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\n\nimport styles from \"./SelectSection.module.css\";\n\nconst SelectSection = ({\n  selectSectionName,\n  selectSectionValue,\n  handleOnChange,\n  handleOnBlur,\n  isRequired,\n  validationErrors,\n  selectSectionOptions,\n  labelContent\n}) => (\n  <div className={styles.selectSection}>\n    <select\n      name={selectSectionName}\n      value={selectSectionValue}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n      required={isRequired}\n    >\n      <option value=\"\" disabled>{}</option>\n      {\n        Object.keys(selectSectionOptions)\n          .map((key) => <option value={selectSectionOptions[key]} key={key}>{key}</option>)\n      }\n    </select>\n    <FieldLabel\n      validationErrors={validationErrors}\n      labelContent={labelContent}\n      styles={styles}\n    />\n  </div>\n);\n\nexport default React.memo(SelectSection);\n","import React from \"react\";\n\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\n\nimport styles from \"./InputSection.module.css\";\n\nconst InputSection = ({\n  inputSectionName,\n  inputSectionType,\n  inputSectionValue,\n  handleOnChange,\n  handleOnBlur,\n  inputSectionMinValue,\n  inputSectionStep,\n  isRequired,\n  validationErrors,\n  labelContent\n}) => (\n  <div className={styles.inputSection}>\n    <input\n      name={inputSectionName}\n      type={inputSectionType}\n      value={inputSectionValue}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n      min={inputSectionMinValue}\n      required={isRequired}\n      step={inputSectionStep}\n    />\n    <FieldLabel\n      validationErrors={validationErrors}\n      labelContent={labelContent}\n      styles={styles}\n    />\n  </div>\n);\n\nexport default React.memo(InputSection);\n","import React from \"react\";\n\nimport SelectSection from \"./SelectSection/SelectSection\";\nimport InputSection from \"./InputSection/InputSection\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashForm.module.css\";\n\nconst CarCrashForm = ({\n  formValues,\n  validationErrors,\n  isSubmitting,\n  handleValueChange,\n  handleBlur,\n  handleFormSubmit,\n  history\n}) => (\n  <>\n    <h1>Виртуален Сензор</h1>\n    <form className={styles.Form} onSubmit={(event) => handleFormSubmit(event, history)}>\n      <SelectSection\n        selectSectionName=\"hasSeatbelt\"\n        selectSectionValue={formValues.hasSeatbelt}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.hasSeatbelt}\n        selectSectionOptions={{ \"С колан\": 0.2, \"Без колан\": 0.04 }}\n        labelContent=\"Имаш ли колан?\"\n      />\n\n      <InputSection\n        inputSectionName=\"driverWeight\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.driverWeight}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.driverWeight}\n        labelContent=\"Какво е теглото ти (в кг)?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"reactionTime\"\n        selectSectionValue={formValues.reactionTime}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.reactionTime}\n        selectSectionOptions={{\n          \"много внимателен\": 1,\n          обикновен: 1.5,\n          \"изморен / възрастен\": 2,\n          нетрезвен: 2.5\n        }}\n        labelContent=\"Какъв вид шофьор си?\"\n      />\n\n      <InputSection\n        inputSectionName=\"carSpeed\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.carSpeed}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.carSpeed}\n        labelContent=\"Каква е скоростта на колата (в км/ч)?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"roadConditions\"\n        selectSectionValue={formValues.roadConditions}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.roadConditions}\n        selectSectionOptions={{\n          \"сух асфалт\": 0.92,\n          \"мокър асфалт\": 0.7,\n          \"заснежен асфалт\": 0.2,\n          \"заледен асфалт\": 0.1\n        }}\n        labelContent=\"Каква е пътната обстановка?\"\n      />\n\n      <InputSection\n        inputSectionName=\"distanceToObstacle\"\n        inputSectionType=\"number\"\n        inputSectionValue={formValues.distanceToObstacle}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        inputSectionMinValue={1}\n        inputSectionStep={0.1}\n        isRequired\n        validationErrors={validationErrors.distanceToObstacle}\n        labelContent=\"Колко метра има до сблъсъка?\"\n      />\n\n      <SelectSection\n        selectSectionName=\"roadGradient\"\n        selectSectionValue={formValues.roadGradient}\n        handleOnChange={handleValueChange}\n        handleOnBlur={handleBlur}\n        isRequired\n        validationErrors={validationErrors.roadGradient}\n        selectSectionOptions={{\n          \"без наклон\": 0,\n          \"лек наклон нагоре\": 0.1,\n          \"стръмен наклон нагоре\": 0.3,\n          \"лек наклон надолу\": -0.1,\n          \"стръмен наклон надолу\": -0.3\n        }}\n        labelContent=\"Какъв е наклона на пътя?\"\n      />\n\n      <Button buttonType=\"submit\" isSubmitting={isSubmitting}>Изчисли</Button>\n    </form>\n  </>\n);\n\nexport default CarCrashForm;\n","const calculateStoppingDistance = (carSpeed, reactionTime, roadGradient, roadConditions) => {\n  const speedInMeters = carSpeed / 3.6;\n  const reactionDistance = speedInMeters * reactionTime;\n  console.log(`reaction distance ${reactionDistance}`);\n  const brakingDistance = Math.abs((speedInMeters ** 2) / ((2 * 9.8) * (roadConditions + roadGradient)));\n  console.log(`breaking distance ${brakingDistance}`);\n  return reactionDistance + brakingDistance;\n};\n\nexport default calculateStoppingDistance;\n","const calculateCarCrashSpeed = (carSpeed, reactionTime, distanceToObstacle, roadConditions, roadGradient) => {\n  const speedInMeters = carSpeed / 3.6;\n  const rateOfDeceleration = (roadConditions + roadGradient) * 9.8;\n  const reactionDistance = speedInMeters * reactionTime;\n\n  if (distanceToObstacle - reactionDistance > 0) {\n    const d = distanceToObstacle - reactionDistance;\n    return Math.sqrt(Math.abs((speedInMeters ** 2) - 2 * rateOfDeceleration * d));\n  }\n\n  return speedInMeters;\n};\n\nexport default calculateCarCrashSpeed;\n","const calculateDeceleration = (driverWeight, carCrashSpeed, seatbelt) => {\n  const impactForce = (driverWeight * (carCrashSpeed ** 2)) / (2 * seatbelt);\n  const stoppingTime = (carCrashSpeed * driverWeight) / impactForce;\n  return (carCrashSpeed / stoppingTime) * 0.101972;\n};\n\nexport default calculateDeceleration;\n","const calculateDeathProbability = (deceleration) => {\n  switch (true) {\n    case deceleration < 10 && deceleration >= 0:\n      return 0;\n    case deceleration < 15:\n      return 5;\n    case deceleration < 20:\n      return 10;\n    case deceleration < 25:\n      return 35;\n    case deceleration < 30:\n      return 42;\n    case deceleration < 35:\n      return 62;\n    case deceleration < 40:\n      return 80;\n    case deceleration < 45:\n      return 87;\n    case deceleration < 50:\n      return 95;\n    case deceleration < 55:\n      return 98;\n    case deceleration >= 55:\n      return 100;\n    default:\n      return 0;\n  }\n};\n\nexport default calculateDeathProbability;\n","import React, { useEffect, useRef } from \"react\";\n\nimport calculateStoppingDistance from \"../../util/CalculateResults/calculateStoppingDistance\";\nimport calculateCarCrashSpeed from \"../../util/CalculateResults/calculateCarCrashSpeed\";\nimport calculateDeceleration from \"../../util/CalculateResults/calculateDeceleration\";\nimport calculateDeathProbability from \"../../util/CalculateResults/calculateDeathProbability\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashResults.module.css\";\n\nconst CarCrashResults = ({\n  carSpeed,\n  reactionTime,\n  roadGradient,\n  roadConditions,\n  distanceToObstacle,\n  driverWeight,\n  hasSeatbelt,\n  resetForm,\n  history\n}) => {\n  const stoppingDistance = useRef(null);\n  const carCrashSpeed = useRef(0);\n  const deathProbability = useRef(0);\n  const hasCrashed = useRef(false);\n\n  useEffect(() => {\n    stoppingDistance.current = Math.abs(calculateStoppingDistance(\n      Number(carSpeed),\n      Number(reactionTime),\n      Number(roadGradient),\n      Number(roadConditions)\n    ));\n    console.log(`stopping distance ${stoppingDistance.current}`);\n    if (stoppingDistance.current > distanceToObstacle) {\n      hasCrashed.current = true;\n      carCrashSpeed.current = calculateCarCrashSpeed(\n        Number(carSpeed),\n        Number(reactionTime),\n        Number(distanceToObstacle),\n        Number(roadConditions),\n        Number(roadGradient)\n      );\n      console.log(`car crash speed ${carCrashSpeed.current}`);\n      const deceleration = calculateDeceleration(Number(driverWeight), carCrashSpeed.current, Number(hasSeatbelt));\n      console.log(`deceleration ${deceleration}`);\n      deathProbability.current = calculateDeathProbability(deceleration);\n      console.log(`death probability ${deathProbability.current}`);\n    }\n  }, [carSpeed, distanceToObstacle, driverWeight, hasSeatbelt, reactionTime, roadConditions, roadGradient]);\n\n  return (\n    <>\n      <h1>Резултати</h1>\n      <div className={styles.Results}>\n        {\n          hasCrashed.current\n            ? (\n              <>\n                <h3>Ще има катастрофа</h3>\n                <p>Колата няма да успее да спре успешно преди мястото на сблъсък.</p>\n                <p>Скоростта на колата при сблъсъка ще е {carCrashSpeed.current.toFixed(2)} метра в секунда ({\n                (carCrashSpeed.current * 3.6).toFixed(2)\n} километра в час).\n                </p>\n                <p>Вероятността за смърт е {deathProbability.current} %.</p>\n              </>\n            )\n            : (\n              <>\n                <h3>Няма да има катастрофа !</h3>\n                <p>Колата ще успее да спре успешно на {\n                  stoppingDistance.current\n                    ? (Number(distanceToObstacle) - stoppingDistance.current).toFixed(2) : 0\n} метра от мястото на сблъсък.\n                </p>\n              </>\n            )\n        }\n      </div>\n      <Button\n        buttonType=\"button\"\n        onClick={() => {\n          resetForm();\n          history.push(\"/car-crash-virtual-sensor\");\n        }}\n      >Ново изчисление\n      </Button>\n      <Button\n        buttonType=\"button\"\n        onClick={() => {\n          history.push(\"/car-crash-virtual-sensor\");\n        }}\n      >Промени изчислението\n      </Button>\n    </>\n  );\n};\n\nexport default CarCrashResults;\n","import React from \"react\";\n\nimport styles from \"./CarCrashDocumentation.module.css\";\n\nconst CarCrashDocumentation = () => (\n  <>\n    <h1>Документация</h1>\n    <div className={styles.Documentation}>\n      <h3>СЪДЪРЖАНИЕ</h3>\n      <ol>\n        <li>\n          <p>Какво е виртуален сензор?</p>\n          <ul>\n            <li>Същност</li>\n            <li>Предимства на виртуалните сензори пред физическите</li>\n            <li>Приложение</li>\n          </ul>\n        </li>\n\n        <li>\n          <p>Виртуален сензор за изчисляване вероятността за смъртност\nпри катастрофа, ако има такава.\n          </p>\n          <ul>\n            <li>Специфики при изчисляване вероятността за смъртност\nпри катастрофа\n            </li>\n            <li>Методи за измерване</li>\n          </ul>\n        </li>\n\n        <li><p>Описание на работата на виртуалния сензор</p></li>\n        <li><p>Резултати от проведени тестове</p></li>\n        <li><p>Източници</p></li>\n      </ol>\n\n      <h3>Какво е виртуален сензор?</h3>\n      <h5>Същност</h5>\n      <p>Виртуалните сензори отчитат качеставата на продукти или\nпараметрите на процеси посредством математически модели\nкато заместител на физичните сензори или в комбинация с\nтях. Те се прилагат като надеждна и по-евтина алтернатива на\nскъпите и непрактични физически измервания.\n      </p>\n\n      <h5>Предимства на виртуалните сензори пред физическите</h5>\n      <p>Има няколко причини виртуалните сензори да са\nпредпочитани пред физическите:\n      </p>\n      <ul>\n        <li>\n          <p>Трудно отчитане чрез физическите сензори</p>\n        </li>\n        <li>\n          <p>Физическите сензори са твърде бавни</p>\n        </li>\n        <li>\n          <p>Инсталирането на физически сензор е твърде скъпо</p>\n        </li>\n        <li>\n          <p>Пространството не позволява инсталирането на физичен\nсензор\n          </p>\n        </li>\n      </ul>\n      <p>\n      Това са достатъчно причини, за да се избира повече\nвиртуалния сензор пред физичния.\n      </p>\n\n      <h5>Приложение</h5>\n      <p>Виртуалните датчици извършват индиректни отчитания на\nабстрактни условия (които не са физически измерими) чрез\nкомпилиране и анализирани на данни. Приложението на\nтакива сензори вече е утвърдено в редица области. Сред тях\nса автомобилостроенето, роботиката, жилищната и сградна\nавтоматизация. Предстои масово налагане и в\nмашиностроенето. Най-разпространените приложения на\nтакива решения са за отчитане на вибрации, прогнозиране на\nсмущения и предсказване на грешката.\n      </p>\n\n      <h3>Виртуален сензор за изчисляване вероятността за смъртност\nпри катастрофа\n      </h3>\n      <h5>Специфики при изчисляване вероятността за смъртност при\nкатастрофа\n      </h5>\n      <p>Всички знаят, че автомобилните катастрофи са много\nопасни, но как може да бъде обясненя чрез физиката? Можем\nли да предвидим последствията от автомобилна катастрофа?\nТова са въпроси, които вълнуват хората. За да намерим\nотговори на въпросите е нужно да проведем опит за\nсимулация на катастрофа. Нещата, които ще са ни необходими\nса:\n      </p>\n      <ul>\n        <li><p>Автомобил</p></li>\n        <li><p>Шофьор</p></li>\n        <li><p>Подходящо място за симулация</p></li>\n        <li><p>Препятствие за сблъсък</p></li>\n        <li><p>Информация за условията на околната среда</p></li>\n      </ul>\n      <p>\n      Неща, които можем лесно да осигурим. Но какво става, ако\nискаме да проведем същия опит, но при други условия на\nпътя, с друг шофьор. Катастрофата зависи от твърде много\nусловия и дори малка промяна на едно от тях би довело до\nразличен резултат. Провеждането на няколко опита би било\n\nвъзможно, но ако искаме да имаме по-добри резултати и по-\nточни са необходими безброй много опити. За целта\n\nсъздадохме виртуален сензор, който позволява потребителят\nда придобие представа как различните фактори определят\nвероятността за смъртност.\n      </p>\n\n      <h5>Методи за измерване</h5>\n      <p>Автомобилът започва да се движи с определена скорост. На\nдадено разстояние от него има препяствие, което ще доведе\nдо катастрофа, ако шофьорът не успее да спре на време.\nШофьорът забелязва пречката пред себе си и започва да\nнатиска спирачките. Измерваме спирачния път, ако имаме\nсблъсък продължаваме с измерванията. При сблъсък колата\nняма да е достигнала скорост 0 km/h , за целта трябва да\nопределим с какава скорост ще се блъсне колата. Тази скорост\nни е необходима, за да намерим с каква сила ще бъде ударът,\nкойто ще понесе шофьорът. След изчисляването на тази сила\nспоред резултатите установяваме каква е вероятността за\nсмърт.\n      </p>\n\n      <h3>Описание на работата на виртуалния сензор</h3>\n      <p>Първата задача на виртуалния сензор е да изчисли дали ще\nима катастрофа. Това се случва по следния алгоритъм:\n      </p>\n      <p>Изчисляваме по следната формула спирачния път:</p>\n    </div>\n  </>\n);\n\nexport default CarCrashDocumentation;\n","import React from \"react\";\n\nimport styles from \"./BurgerMenu.module.css\";\n\nconst BurgerMenu = ({ toggleSideDrawer, isOpen }) => (\n  <div\n    role=\"presentation\"\n    className={styles.BurgerMenu}\n    onClick={toggleSideDrawer}\n  >\n    <div className={isOpen ? styles.toggle : \"\"} id={styles.lineOne} />\n    <div className={isOpen ? styles.toggle : \"\"} id={styles.lineTwo} />\n    <div className={isOpen ? styles.toggle : \"\"} id={styles.lineThree} />\n  </div>\n);\n\nexport default BurgerMenu;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./NavItem.module.css\";\n\nconst NavItem = ({ link, children, onClick }) => (\n  <li className={styles.NavItem}>\n    <NavLink to={link} activeClassName={styles.activeNavItem} onClick={onClick}>{children}</NavLink>\n  </li>\n);\n\nexport default React.memo(NavItem);\n","import React from \"react\";\n\nimport NavItem from \"./NavItem/NavItem\";\n\nimport styles from \"./NavItems.module.css\";\n\nconst NavItems = ({ onClick }) => (\n  <ul className={styles.NavItems}>\n    <NavItem link=\"/car-crash-home\" onClick={onClick}>Начало</NavItem>\n    <NavItem link=\"/car-crash-virtual-sensor\" onClick={onClick}>Виртуален Сензор</NavItem>\n    <NavItem link=\"car-crash-documentation\" onClick={onClick}>Документация</NavItem>\n  </ul>\n);\n\nexport default React.memo(NavItems);\n","import React from \"react\";\n\nimport NavItems from \"../NavItems/NavItems\";\n\nimport styles from \"./SideDrawer.module.css\";\n\nconst SideDrawer = ({ isOpen, closeSideDrawer }) => (\n  <div className={`${styles.SideDrawer} ${isOpen ? styles.Opened : styles.Closed}`}>\n    <nav>\n      <NavItems onClick={closeSideDrawer} />\n    </nav>\n  </div>\n);\n\nexport default React.memo(SideDrawer);\n","import React from \"react\";\n\nimport NavItems from \"../NavItems/NavItems\";\n\nimport styles from \"./NavBar.module.css\";\n\nconst NavBar = () => (\n  <nav className={styles.NavBar}>\n    <NavItems />\n  </nav>\n);\n\nexport default React.memo(NavBar);\n","import { useState, useEffect, useCallback } from \"react\";\n\nconst useFormValidation = (initialFormState, validateForm) => {\n  const [formValues, setFormValues] = useState(initialFormState);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(validationErrors).length === 0) {\n        setIsSubmitting(false);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [validationErrors, isSubmitting, formValues]);\n\n  const handleValueChange = useCallback((event) => setFormValues({\n    ...formValues,\n    [event.target.name]: event.target.value\n  }), [formValues]);\n\n  const handleBlur = useCallback((event) => {\n    const errors = validateForm(formValues);\n    let errorMessage = \"\";\n    for (const error of Object.keys(errors)) {\n      if (event.target.name === error) {\n        errorMessage = errors[error];\n      }\n    }\n\n    setValidationErrors({ ...validationErrors, [event.target.name]: errorMessage });\n  }, [formValues, validateForm, validationErrors]);\n\n  const handleFormSubmit = useCallback((event, history) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setValidationErrors(validateForm(formValues));\n    history.push(\"/car-crash-results\");\n  }, [formValues, validateForm]);\n\n  const handleFormReset = useCallback(() => {\n    setFormValues(initialFormState);\n  }, [initialFormState]);\n\n  return {\n    formValues,\n    validationErrors,\n    isSubmitting,\n    handleValueChange,\n    handleBlur,\n    handleFormSubmit,\n    handleFormReset\n  };\n};\n\nexport default useFormValidation;\n","const countDecimals = (number) => {\n  if (Math.floor(number) !== number) {\n    return number.toString().split(\".\")[1].length || 0;\n  }\n  return 0;\n};\n\nexport default countDecimals;\n","import countDecimals from \"../countDecimals/countDecimals\";\n\nconst validateForm = (formValues) => {\n  const errors = {};\n\n  if (!formValues.driverWeight) {\n    errors.driverWeight = \"Моля въведи килограми !\";\n  } else if (Number(formValues.driverWeight) < 0) {\n    errors.driverWeight = \"Моля въведи положителни килограми !\";\n  } else if (Number(formValues.driverWeight) === 0) {\n    errors.driverWeight = \"Моля въведи повече от 0 килограма !\";\n  } else if (countDecimals(Number(formValues.driverWeight)) > 2) {\n    errors.driverWeight = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.carSpeed) {\n    errors.carSpeed = \"Моля въведи скорост !\";\n  } else if (Number(formValues.carSpeed) < 0) {\n    errors.carSpeed = \"Моля въведи положителна скорост !\";\n  } else if (Number(formValues.carSpeed) === 0) {\n    errors.carSpeed = \"Моля въведи скорост по-голяма от 0 !\";\n  } else if (countDecimals(Number(formValues.carSpeed)) > 2) {\n    errors.carSpeed = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.distanceToObstacle) {\n    errors.distanceToObstacle = \"Моля въведи разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) < 0) {\n    errors.distanceToObstacle = \"Моля въведи положителн разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) === 0) {\n    errors.distanceToObstacle = \"Моля въведи разстояние по-голямо от 0 !\";\n  } else if (countDecimals(Number(formValues.distanceToObstacle)) > 2) {\n    errors.distanceToObstacle = \"Моля въведи число до втория знак !\";\n  }\n\n  if (!formValues.hasSeatbelt) {\n    errors.hasSeatbelt = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.reactionTime) {\n    errors.reactionTime = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadConditions) {\n    errors.roadConditions = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadGradient) {\n    errors.roadGradient = \"Моля избери една от опциите !\";\n  }\n\n  return errors;\n};\n\nexport default validateForm;\n","import React, { useState } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport CarCrashHome from \"./components/CarCrashHome/CarCrashHome\";\nimport CarCrashForm from \"./components/CarCrashForm/CarCrashForm\";\nimport CarCrashResults from \"./components/CarCrashResults/CarCrashResults\";\nimport CarCrashDocumentation from \"./components/CarCrashDocumentation/CarCrashDocumentation\";\nimport BurgerMenu from \"./components/Navigation/BurgerMenu/BurgerMenu\";\nimport SideDrawer from \"./components/Navigation/SideDrawer/SideDrawer\";\nimport NavBar from \"./components/Navigation/NavBar/NavBar\";\n\nimport useFormValidation from \"./hooks/useFormValidation\";\nimport validateForm from \"./util/ValidateForm/validateForm\";\nimport \"./App.css\";\n\nconst initialFormState = {\n  hasSeatbelt: \"\",\n  driverWeight: \"\",\n  reactionTime: \"\",\n  carSpeed: \"\",\n  roadConditions: \"\",\n  roadGradient: \"\",\n  distanceToObstacle: \"\",\n};\n\nconst App = () => {\n  const formValidationObject = useFormValidation(initialFormState, validateForm);\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <BurgerMenu toggleSideDrawer={() => setIsSideDrawerOpen((prevState) => !prevState)} isOpen={isSideDrawerOpen} />\n      <SideDrawer isOpen={isSideDrawerOpen} closeSideDrawer={() => setIsSideDrawerOpen(false)} />\n      <NavBar />\n      <div className=\"VirtualSensor\">\n        <Switch>\n          <Route path=\"/car-crash-home\" component={CarCrashHome} />\n          <Route\n            path=\"/car-crash-virtual-sensor\"\n            render={(routProps) => <CarCrashForm {...formValidationObject} {...routProps} />}\n          />\n          <Route\n            path=\"/car-crash-results\"\n            render={(routProps) => (\n              <CarCrashResults\n                {...formValidationObject.formValues}\n                {...routProps}\n                resetForm={formValidationObject.handleFormReset}\n              />\n            )}\n          />\n          <Route path=\"/car-crash-documentation\" component={CarCrashDocumentation} />\n          <Redirect exact path=\"/\" to=\"/car-crash-home\" />\n          <Route render={() => <h1>Error 404</h1>} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}