{"version":3,"sources":["components/CarCrashForm/CarCrashForm.module.css","components/UI/Button/Button.module.css","components/CarCrashResults/CarCrashResults.module.css","components/UI/Button/Button.js","components/CarCrashForm/CarCrashForm.js","util/CalculateResults/calculateStoppingDistance.js","util/CalculateResults/calculateCarCrashSpeed.js","components/CarCrashResults/CarCrashResults.js","hooks/useFormValidation.js","util/ValidateForm/validateForm.js","App.js","index.js"],"names":["module","exports","Button","buttonType","onClick","isSubmitting","children","type","className","styles","disabled","CarCrashForm","formValues","validationErrors","handleValueChange","handleBlur","handleFormSubmit","history","Form","onSubmit","event","selectSection","name","value","hasSeatbelt","onChange","onBlur","required","inputLabel","errorLabel","labelContent","errorContent","inputSection","driverWeight","min","reactionTime","carSpeed","roadConditions","distanceToObstacle","roadGradient","calculateStoppingDistance","speedInMeters","calculateCarCrashSpeed","reactionDistance","d","Math","sqrt","hasCrashed","stoppingDistance","carCrashSpeed","CarCrashResults","useEffect","Number","console","log","Results","toFixed","push","useFormValidation","initialFormState","validateForm","useState","setFormValues","setValidationErrors","setIsSubmitting","Object","keys","length","target","errors","errorMessage","error","preventDefault","App","formValidationObject","path","render","routProps","exact","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf3cf9ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CarCrashForm_Form__3pGI1\",\"inputSection\":\"CarCrashForm_inputSection__38OO7\",\"selectSection\":\"CarCrashForm_selectSection__19uAZ\",\"inputLabel\":\"CarCrashForm_inputLabel__3_WF6\",\"labelContent\":\"CarCrashForm_labelContent__1rWyQ\",\"errorContent\":\"CarCrashForm_errorContent__fRUWC\",\"errorLabel\":\"CarCrashForm_errorLabel__b6IKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"CarCrashResults_Results__3VLnC\"};","import React from \"react\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ buttonType, onClick, isSubmitting, children }) => (\n  <button\n    type={buttonType}\n    className={styles.Button}\n    onClick={onClick}\n    disabled={isSubmitting}\n  >{children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashForm.module.css\";\n\nconst CarCrashForm = ({\n  formValues,\n  validationErrors,\n  isSubmitting,\n  handleValueChange,\n  handleBlur,\n  handleFormSubmit,\n  history\n}) => (\n  <>\n    <h1>Car Crash Virtual Sensor</h1>\n    <form className={styles.Form} onSubmit={(event) => handleFormSubmit(event, history)}>\n      <div className={styles.selectSection}>\n        <select\n          name=\"hasSeatbelt\"\n          value={formValues.hasSeatbelt}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          required\n        >\n          <option value=\"\" disabled>{}</option>\n          <option value>С колан</option>\n          <option value={false}>Без колан</option>\n        </select>\n        <label className={validationErrors.hasSeatbelt ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.hasSeatbelt ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n            {validationErrors.hasSeatbelt ? validationErrors.hasSeatbelt : \"Имаш ли колан ?\"}\n          </span>\n        </label>\n      </div>\n\n      <div className={styles.inputSection}>\n\n        <input\n          name=\"driverWeight\"\n          type=\"number\"\n          value={formValues.driverWeight}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          min={1}\n          required\n        />\n        <label className={validationErrors.driverWeight ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.driverWeight ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n            {validationErrors.driverWeight ? validationErrors.driverWeight : \"Какво е теглото ти ?\"}\n          </span>\n        </label>\n      </div>\n\n      <div className={styles.selectSection}>\n        <select\n          name=\"reactionTime\"\n          value={formValues.reactionTime}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          required\n        >\n          <option value=\"\" disabled>{}</option>\n          <option value={1}>много внимателен</option>\n          <option value={1.5}>обикновен</option>\n          <option value={2}>изморен / възрастен</option>\n          <option value={2.5}>нетрезвен</option>\n        </select>\n        <label className={validationErrors.reactionTime ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.reactionTime ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n            {validationErrors.reactionTime ? validationErrors.reactionTime : \"Какъв вид шофьор си ?\"}\n          </span>\n        </label>\n      </div>\n      <div className={styles.inputSection}>\n\n        <input\n          name=\"carSpeed\"\n          type=\"number\"\n          value={formValues.carSpeed}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          min={1}\n          required\n        />\n        <label className={validationErrors.carSpeed ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.carSpeed ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n            {validationErrors.carSpeed ? validationErrors.carSpeed : \"Каква е скоростта на колата ?\"}\n          </span>\n        </label>\n      </div>\n\n      <div className={styles.selectSection}>\n        <select\n          name=\"roadConditions\"\n          value={formValues.roadConditions}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          required\n        >\n          <option value=\"\" disabled>{}</option>\n          <option value={0.92}>сух асфалт</option>\n          <option value={0.7}>мокър асфалт</option>\n          <option value={0.2}>заснежен асфалт</option>\n          <option value={0.1}>заледен асфалт</option>\n        </select>\n        <label className={validationErrors.roadConditions ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.roadConditions\n            ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}\n          >\n            {validationErrors.roadConditions ? validationErrors.roadConditions : \"Каква е пътната обстановка ?\"}\n          </span>\n        </label>\n      </div>\n\n      <div className={styles.inputSection}>\n\n        <input\n          name=\"distanceToObstacle\"\n          type=\"number\"\n          value={formValues.distanceToObstacle}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          min={1}\n          required\n        />\n        <label className={validationErrors.distanceToObstacle\n          ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}\n        >\n          <span className={validationErrors.distanceToObstacle\n            ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}\n          >\n            {\n              validationErrors.distanceToObstacle\n                ? validationErrors.distanceToObstacle : \"Какво е разстояние до мястото на сблъсък ?\"\n            }\n          </span>\n        </label>\n      </div>\n\n      <div className={styles.selectSection}>\n        <select\n          name=\"roadGradient\"\n          value={formValues.roadGradient}\n          onChange={handleValueChange}\n          onBlur={handleBlur}\n          required\n        >\n          <option value=\"\" disabled>{}</option>\n          <option value={0}>без наклон</option>\n          <option value={0.1}>лек наклон нагоре</option>\n          <option value={0.3}>стръмен наклон нагоре</option>\n          <option value={-0.1}>лек наклон надолу</option>\n          <option value={-0.3}>стръмен наклон надолу</option>\n        </select>\n        <label className={validationErrors.roadGradient ? `${styles.inputLabel} ${styles.errorLabel}` : styles.inputLabel}>\n          <span className={validationErrors.roadGradient ? `${styles.labelContent} ${styles.errorContent}` : styles.labelContent}>\n            {validationErrors.roadGradient ? validationErrors.roadGradient : \"Какъв е наклона на пътя ?\"}\n          </span>\n        </label>\n      </div>\n      <Button buttonType=\"submit\" isSubmitting={isSubmitting}>Изчисли</Button>\n    </form>\n  </>\n);\n\nexport default CarCrashForm;\n","const calculateStoppingDistance = (carSpeed, reactionTime, roadGradient, roadConditions) => {\n  const speedInMeters = carSpeed / 3.6;\n  const reactionDistance = speedInMeters * reactionTime;\n  const breakingDistance = (speedInMeters ** 2) / ((2 * 9.8) * (roadConditions + roadGradient));\n\n  return reactionDistance + breakingDistance;\n};\n\nexport default calculateStoppingDistance;\n","const calculateCarCrashSpeed = (carSpeed, reactionTime, distanceToObstacle) => {\n  const speedInMeters = carSpeed / 3.6;\n  const rateOfDeceleration = 10;\n  const reactionDistance = speedInMeters * reactionTime;\n\n  if (distanceToObstacle - reactionDistance > 0) {\n    const d = distanceToObstacle - reactionDistance;\n    return Math.sqrt((speedInMeters ** 2) - 2 * rateOfDeceleration * d);\n  }\n\n  return speedInMeters;\n};\n\nexport default calculateCarCrashSpeed;\n","import React, { useEffect } from \"react\";\n\nimport calculateStoppingDistance from \"../../util/CalculateResults/calculateStoppingDistance\";\nimport calculateCarCrashSpeed from \"../../util/CalculateResults/calculateCarCrashSpeed\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./CarCrashResults.module.css\";\n\nlet hasCrashed = false;\nlet stoppingDistance = 0;\nlet carCrashSpeed = 0;\n\nconst CarCrashResults = ({ carSpeed, reactionTime, roadGradient, roadConditions, distanceToObstacle, history }) => {\n  useEffect(() => {\n    stoppingDistance = calculateStoppingDistance(\n      Number(carSpeed),\n      Number(reactionTime),\n      Number(roadGradient),\n      Number(roadConditions)\n    );\n    console.log(`stopping distance ${stoppingDistance}`);\n    if (stoppingDistance > distanceToObstacle) {\n      hasCrashed = true;\n      carCrashSpeed = calculateCarCrashSpeed(Number(carSpeed), Number(reactionTime), Number(distanceToObstacle));\n      console.log(`car crash speed ${carCrashSpeed}`);\n    }\n  }, [carSpeed, distanceToObstacle, reactionTime, roadConditions, roadGradient]);\n  return (\n    <>\n      <h1>Резултати</h1>\n      <div className={styles.Results}>\n        {\n          hasCrashed\n            ? (\n              <>\n                <h3>Ще има катастрофа</h3>\n                <p>Колата няма да успее да спре успешно преди мястото на сблъсък.</p>\n                <p>Скоростта на при сблъсъка ще е {carCrashSpeed.toFixed(2)} метра за секунда.</p>\n              </>\n            )\n            : (\n              <>\n                <h3>Няма да има катастрофа !</h3>\n                <p>Колата ще успее да спре успешно на {(distanceToObstacle - stoppingDistance)\n                  .toFixed(2)} метра от мястото на сблъсък.\n                </p>\n              </>\n            )\n        }\n      </div>\n      <Button\n        buttonType=\"button\"\n        onClick={() => history.push(\"/car-crash-virtual-sensor\")}\n      >Ново изчисление\n      </Button>\n    </>\n  );\n};\n\nexport default CarCrashResults;\n","import { useState, useEffect } from \"react\";\n\nconst useFormValidation = (initialFormState, validateForm) => {\n  const [formValues, setFormValues] = useState(initialFormState);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(validationErrors).length === 0) {\n        setIsSubmitting(false);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [validationErrors, isSubmitting, formValues]);\n\n  const handleValueChange = (event) => setFormValues({\n    ...formValues,\n    [event.target.name]: event.target.value\n  });\n\n  const handleBlur = (event) => {\n    const errors = validateForm(formValues);\n    let errorMessage = \"\";\n    for (const error of Object.keys(errors)) {\n      if (event.target.name === error) {\n        errorMessage = errors[error];\n      }\n    }\n\n    setValidationErrors({ ...validationErrors, [event.target.name]: errorMessage });\n  };\n\n  const handleFormSubmit = (event, history) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setValidationErrors(validateForm(formValues));\n    history.push(\"/car-crash-results\");\n  };\n\n  return { formValues, validationErrors, isSubmitting, handleValueChange, handleBlur, handleFormSubmit };\n};\n\nexport default useFormValidation;\n","const validateForm = (formValues) => {\n  const errors = {};\n\n  if (!formValues.driverWeight) {\n    errors.driverWeight = \"Моля въведи килограми !\";\n  } else if (Number(formValues.driverWeight) < 0) {\n    errors.driverWeight = \"Моля въведи положителни килограми !\";\n  } else if (Number(formValues.driverWeight) === 0) {\n    errors.driverWeight = \"Моля въведи повече от 0 килограма !\";\n  }\n\n  if (!formValues.carSpeed) {\n    errors.carSpeed = \"Моля въведи скорост !\";\n  } else if (Number(formValues.carSpeed) < 0) {\n    errors.carSpeed = \"Моля въведи положителна скорост !\";\n  } else if (Number(formValues.carSpeed) === 0) {\n    errors.carSpeed = \"Моля въведи скорост по-голяма от 0 !\";\n  }\n\n  if (!formValues.distanceToObstacle) {\n    errors.distanceToObstacle = \"Моля въведи разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) < 0) {\n    errors.distanceToObstacle = \"Моля въведи положителн разстояние !\";\n  } else if (Number(formValues.distanceToObstacle) === 0) {\n    errors.distanceToObstacle = \"Моля въведи разстояние по-голямо от 0 !\";\n  }\n\n  if (!formValues.hasSeatbelt) {\n    errors.hasSeatbelt = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.reactionTime) {\n    errors.reactionTime = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadConditions) {\n    errors.roadConditions = \"Моля избери една от опциите !\";\n  }\n\n  if (!formValues.roadGradient) {\n    errors.roadGradient = \"Моля избери една от опциите !\";\n  }\n\n  return errors;\n};\n\nexport default validateForm;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport CarCrashForm from \"./components/CarCrashForm/CarCrashForm\";\nimport CarCrashResults from \"./components/CarCrashResults/CarCrashResults\";\n\nimport useFormValidation from \"./hooks/useFormValidation\";\nimport validateForm from \"./util/ValidateForm/validateForm\";\nimport \"./App.css\";\n\nconst initialFormState = {\n  hasSeatbelt: \"\",\n  driverWeight: \"\",\n  reactionTime: \"\",\n  carSpeed: \"\",\n  roadConditions: \"\",\n  roadGradient: \"\",\n  distanceToObstacle: \"\",\n};\n\nconst App = () => {\n  const formValidationObject = useFormValidation(initialFormState, validateForm);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route\n          path=\"/car-crash-virtual-sensor\"\n          render={(routProps) => <CarCrashForm {...formValidationObject} {...routProps} />}\n        />\n        <Route\n          path=\"/car-crash-results\"\n          render={(routProps) => <CarCrashResults {...formValidationObject.formValues} {...routProps} />}\n        />\n        <Redirect exact path=\"/\" to=\"/car-crash-virtual-sensor\" />\n        <Route render={() => <h1>404</h1>} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}